{"version":3,"sources":["components/SearchBar.js","api/Youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","className","style","marginTop","onSubmit","this","type","onChange","placeholder","React","Component","axios","create","baseURL","params","part","MaxResults","key","VideoItem","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","renderedList","map","id","videoId","VideoDetail","videoSrc","description","App","selectedVideo","onTermSubmit","a","youtube","get","q","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"4PAgDeA,E,4MAlCfC,MAAQ,CAACC,KAAM,I,EAEfC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAACH,KAAME,EAAME,OAAOC,S,EAItCC,aAAe,SAAAJ,GACfA,EAAMK,iBAEN,EAAKC,MAAMF,aAAa,EAAKP,MAAMC,O,uDAI3B,OAEI,yBAAKS,UAAU,wBAAwBC,MAAO,CAACC,UAAW,KACtD,0BAAMC,SAAUC,KAAKP,aAAcG,UAAU,WACzC,yBAAKA,UAAU,SACX,+CACA,2BACAK,KAAK,OACLT,MAAOQ,KAAKd,MAAMC,KAClBe,SAAUF,KAAKZ,cACfe,YAAY,+B,GAzBZC,IAAMC,W,QCRfC,E,OAAAA,EAAMC,OAAO,CAC5BC,QAAS,wCACTC,OAAQ,CACJC,KAAM,UACNC,WAAY,EACZC,IAPQ,6CCWGC,G,MAXG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACxB,OACA,yBAAKC,QAAS,kBAAMD,EAAcD,IAAQlB,UAAU,mBACnD,yBAAKqB,IAAKH,EAAMI,QAAQC,MAAOvB,UAAU,WAAWwB,IAAKN,EAAMI,QAAQG,WAAWC,OAAOC,MAC1F,yBAAK3B,UAAU,WACX,yBAAKA,UAAU,UAAUkB,EAAMI,QAAQC,WCOhCK,EAZG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQV,EAAoB,EAApBA,cACvBW,EAAeD,EAAOE,KAAI,SAAAb,GAC5B,OAAO,kBAAC,EAAD,CAAWF,IAAKE,EAAMc,GAAGC,QAASd,cAAeA,EAAeD,MAAOA,OAG9E,OACA,yBAAKlB,UAAU,2BACd8B,ICYUI,EApBK,SAAC,GAAe,IAAbhB,EAAY,EAAZA,MACnB,IAAKA,EACD,OAAO,2CAGX,IAAMiB,EAAQ,wCAAoCjB,EAAMc,GAAGC,SAE3D,OACA,6BACI,yBAAKjC,UAAU,YACX,4BAAQuB,MAAM,eAAeC,IAAKW,KAEtC,yBAAKnC,UAAU,cACX,wBAAIA,UAAU,aAAakB,EAAMI,QAAQC,OACjD,2BAAIL,EAAMI,QAAQc,gBC0CPC,E,4MA/Cf/C,MAAQ,CAACuC,OAAQ,GAAIS,cAAe,M,EAMhCC,a,uCAAe,WAAMhD,GAAN,eAAAiD,EAAA,sEACWC,EAAQC,IAAI,UAAW,CACzC7B,OAAQ,CACJ8B,EAAGpD,KAHA,OACNqD,EADM,OAOX,EAAKlD,SAAS,CAAEmC,OAAQe,EAASC,KAAKC,MAClCR,cAAeM,EAASC,KAAKC,MAAM,KAR5B,2C,wDAcf3B,cAAgB,SAACD,GACb,EAAKxB,SAAS,CAAE4C,cAAepB,K,kEAlBnCd,KAAKmC,aAAa,e,+BAsBd,OACI,yBAAKvC,UAAU,gBAClB,kBAAC,EAAD,CAAWH,aAAcO,KAAKmC,eAC9B,yBAAKvC,UAAU,WACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,sBACf,kBAAC,EAAD,CAAakB,MAAOd,KAAKd,MAAMgD,iBAE/B,yBAAKtC,UAAU,oBACf,kBAAC,EAAD,CACAmB,cAAef,KAAKe,cACpBU,OAAQzB,KAAKd,MAAMuC,iB,GArCVrB,IAAMC,WCJxBsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.051669b2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n//steps. 1.import react. 2. create a class 3. create a div with <form> and <input> inside. 4. export default.\r\n//create state and initialize it to an empty string. You can use any name apart from \"term\"\r\n//after creating state. set the value of <input> to the state you created, it will look something like <input value={this.state.term} />\r\n//Next. We want to control what happens when the input change. This must be done by creating \"OnChange\" property inside the input syntax.\r\n//set the \"OnChange\" property to a function such as {this.OnInputChange}. \"OnInputChange\" can be substituted with any name you want.\r\n//OnInputChange will now be set to \"setState\". This is done so it updates the current term value with the target value.\r\n//on the <form> syntax. Create \"OnSubmit\" property and set it to a function \"onFormSubmit\". \r\n//onFormSubmit will prevent the form from submitting the input term. We do this by adding preventDefault() method to it.\r\n//preventDefault() ensures the page does not refresh when you hit enter\r\n\r\n\r\nclass SearchBar extends React.Component {\r\nstate = {term: ''};\r\n\r\nonInputChange = (event) => {\r\n    this.setState({term: event.target.value});\r\n\r\n};\r\n\r\nonFormSubmit = event => {\r\nevent.preventDefault();\r\n\r\nthis.props.onFormSubmit(this.state.term);\r\n};\r\n\r\n    render() {\r\n        return (\r\n            //you can give two class name to a div like below. the names are search-bar and ui segments(from semantic-ui.com)\r\n            <div className=\"search-bar ui segment\" style={{marginTop: 20}}>\r\n                <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n                    <div className=\"field\">\r\n                        <label>Video Search</label>\r\n                        <input \r\n                        type=\"text\" \r\n                        value={this.state.term}\r\n                        onChange={this.onInputChange} \r\n                        placeholder=\"Enter a search term\"/>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    };\r\n};\r\n\r\n\r\nexport default SearchBar;","import axios from 'axios';\r\n\r\n\r\nconst KEY = \"AIzaSyBfhpa9KlRFQiUKtDF4Cv5aD8B-_rJ60nU\";\r\n\r\nexport default axios.create({\r\nbaseURL: 'https://www.googleapis.com/youtube/v3',\r\nparams: {\r\n    part: \"snippet\",\r\n    MaxResults: 5,\r\n    key: KEY\r\n}\r\n});","import React from 'react';\r\nimport './VideoItem.css';\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n    return (\r\n    <div onClick={() => onVideoSelect(video)} className='video-item item'>\r\n     <img alt={video.snippet.title} className=\"ui image\" src={video.snippet.thumbnails.medium.url} />  \r\n    <div className='content'>\r\n        <div className='header'>{video.snippet.title}</div>\r\n    </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\nconst renderedList = videos.map(video => {\r\n    return <VideoItem key={video.id.videoId} onVideoSelect={onVideoSelect} video={video}/>;\r\n});\r\n\r\n    return (\r\n    <div className=\"ui relaxed divided list\">\r\n    {renderedList}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default VideoList;","import React from 'react';\r\n\r\nconst VideoDetail = ({ video }) => {\r\n    if (!video) {\r\n        return <div>Loading...</div>\r\n    };\r\n\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\n    return (\r\n    <div>\r\n        <div className='ui embed'>\r\n            <iframe title=\"video player\" src={videoSrc} />\r\n            </div>\r\n        <div className=\"ui segment\">\r\n            <h4 className=\"ui header\">{video.snippet.title}</h4>\r\n    <p>{video.snippet.description}</p>\r\n            </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default VideoDetail;","import React from 'react';\r\nimport SearchBar from './SearchBar'\r\nimport youtube from '../api/Youtube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\n\r\n//onTermSubmit was created and added to SearchBar below. It contains API information. OnTermSubmit can be substitued\r\n//with any name you like. It also doesn't have to be identical with the one added to SearchBar below\r\n//we called youtube below because the base data has already been set in the file we called youtube-api.js with axios\r\n\r\nclass App extends React.Component {\r\nstate = {videos: [], selectedVideo: null };\r\n\r\ncomponentDidMount() {\r\n    this.onTermSubmit('buildings');\r\n}\r\n\r\n    onTermSubmit = async term => {\r\n       const response = await youtube.get('/search', {\r\n            params: {\r\n                q: term\r\n            }\r\n        });\r\n\r\n        this.setState({ videos: response.data.items,\r\n            selectedVideo: response.data.items[0]\r\n        \r\n        });\r\n\r\n    };\r\n\r\n    onVideoSelect = (video) => {\r\n        this.setState({ selectedVideo: video});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui container\">\r\n         <SearchBar onFormSubmit={this.onTermSubmit} /> \r\n         <div className='ui grid'>\r\n         <div className='ui row'>\r\n         <div className='eleven wide column'>\r\n         <VideoDetail video={this.state.selectedVideo} />\r\n         </div>\r\n         <div className='five wide column'>\r\n         <VideoList \r\n         onVideoSelect={this.onVideoSelect} \r\n         videos={this.state.videos} />\r\n         </div>\r\n         </div>\r\n         </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\n};\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App'\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}